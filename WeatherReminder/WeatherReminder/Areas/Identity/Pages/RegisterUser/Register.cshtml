@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<head>
    <script src="jquery-3.5.1.min.js"></script>
</head>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-9 col-md-4">
            <h1>@ViewData["Title"]</h1>

            <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <p class="text-danger" id="noOptionsExist"></p>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <label asp-for="Input.PhoneNumber"></label>
                <div class="row">
                    <div class="col-3">
                        <div class="form-group">
                            <input asp-for="Input.CountryCode" class="form-control inline" />
                            <p style="font-size:11px;">Country Code</p>
                        </div>
                    </div>

                    <div class="col-9">
                        <div class="form-group">
                            <input asp-for="Input.PhoneNumber" id="phoneInput" class="form-control" />
                            <p style="font-size:11px;">Phone Number</p>
                        </div>
                    </div>
                </div>
                <span asp-validation-for="Input.CountryCode" class="text-danger"></span>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>

                <div class="form-group">
                    <label asp-for="Input.City">City</label>
                    <input asp-for="Input.City" id="cityInput" class="form-control" />
                    <span asp-validation-for="Input.City" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.State"></label>
                    <input asp-for="Input.State" id="stateInput" class="form-control" />
                    <span asp-validation-for="Input.State" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Country"></label>
                    <input asp-for="Input.Country" id="countryInput" class="form-control" />
                    <span asp-validation-for="Input.Country" class="text-danger"></span>
                </div>

                <hr />

                <div class="form-group">
                    <label asp-for="Input.Password" class="mt-2"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>

                <input type="hidden" id="GetLocalTime" asp-for="Input.UserTime" value="">

                <button type="submit" class="btn btn-primary">Register</button>
            </form>

            @*
                Partial view discovery
                When a partial view is referenced by name without a file extension, the following locations are searched in the stated order:

                Razor Pages:
                1. Currently executing page's folder
                2. Directory graph above the page's folder
                3. /Shared
                4. /Pages/Shared
                5. /Views/Shared
            *@
            @* <partial name="_RegisterModal" model="Model" />*@
            <!-- Modal -->
            <div class="modal fade" id="myModal" role="dialog">
                <div class="modal-dialog">

                    @if (Model.Options != null && Model.Options.Count != 0)
                    {
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Location Options</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>
                            <div class="modal-body">
                                <form id="modalOptions">
                                    <div class="form-group mb-4">
                                        @for (var i = 0; i < Model.Options.Count; i++)
                                        {
                                            if (i == 0)
                                            {
                                                <div class="form-check">
                                                    <input class="form-check-input radioButton" type="radio" name="option" checked>
                                                    <label class="form-check-label radioButtonLabel">@Model.Options[i]</label>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-check">
                                                    <input class="form-check-input radioButton" type="radio" name="option">
                                                    <label class="form-check-label radioButtonLabel">@Model.Options[i]</label>
                                                </div>
                                            }
                                        }
                                    </div>
                                    <hr />
                                    <button type="button" class="btn btn-primary" id="saveLocationOption">Save</button>
                                    <button type="button" class="btn btn-default ml-2" data-dismiss="modal">Close</button>
                                </form>
                            </div>
                        </div>
                    }
                    else if (Model.Options != null && Model.Options.Count == 0)
                    {
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Location Not Found</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>
                            <div class="modal-body">
                                <form id="modalOptions">
                                    <div class="form-group mb-4">
                                        <div class="text-danger text-center">Location could not be found. Please enter a new location.</div>
                                    </div>
                                    <hr />
                                    <button type="button" class="btn btn-default ml-2" data-dismiss="modal">Close</button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">
    let isLocationMatch = "@Model.IsAnAutoCompleteOption";
    let optionsExist = "@Model.OptionsExist";
</script>
<script type="module" src="~/js/GetLocalTime.js"></script>
<script type="module" src="~/js/AutoCompleteModal.js"></script>


@section Scripts {
<partial name="_ValidationScriptsPartial" />
}
